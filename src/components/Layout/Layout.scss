/** @define layout */
@use "sass:list";
@use "src/vars" as *;
@use "src/functions" as *;
@use "src/mixins" as *;

@use "node_modules/normalize.css/normalize.css";

/* stylelint-disable plugin/selector-bem-pattern */
:root {
    @each $name, $props in $themes {
        @if ($name == "light" or $name == "dark") {
            @media (prefers-color-scheme: #{$name}) {
                @include create-custom-props($props);
            }
        }
    }
}

body {
    @each $name, $props in $themes {
        &[data-theme="#{$name}"] {
            @include create-custom-props($props);
        }
    }
    display: block;
    min-height: 100%;
    margin: 0;
    padding: 0;
    @include transition-colors($color-bg-odd, $color-text);
    font: normal 1em/#{$line-height} $font-primary;
    @include each-breakpoint($font-sizes-base, font-size);
    text-rendering: optimizelegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

*,
*::before,
*::after {
    box-sizing: border-box;
}

img {
    max-width: 100%;
}

svg {
    display: block;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

::selection {
    background: $color-selection-bg;
    color: $color-selection-text;
}
/* stylelint-enable plugin/selector-bem-pattern */

.layout {
    display: flex;
    flex-direction: column;
    align-content: stretch;
    min-height: 100vh;
    @include transition-colors($color-bg, $color-text);

    &__header {
        z-index: z-index("header");
    }

    &__content {
        max-width: $content-max-width;
        margin: auto;
        padding: ($gutter * 4) ($gutter * 2);
        text-align: left;
    }

    &__image {
        display: block;
        margin: 0 auto;
        width: 40%;
        max-width: 250px;
    }

    @include media(md) {
        position: relative;

        &__themes {
            position: fixed;
            right: $gutter;
            top: $gutter;
            z-index: z-index("themes");
        }
    }
}
