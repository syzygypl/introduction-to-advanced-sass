@use "sass:meta";
@use "vars" as *;
@use "functions" as *;

@forward "reset" as reset-*;

@mixin media($minWidth, $maxWidth: null) {
    @if meta.type-of($minWidth) != number {
        $minWidth: breakpoint($minWidth);
    }

    @if ($minWidth) {
        @if ($maxWidth) {
            @if meta.type-of($maxWidth) != number {
                $maxWidth: breakpoint($maxWidth) - 1px;
            }

            @if ($minWidth <= 0) {
                @media (max-width: $maxWidth) {
                    @content;
                }
            } @else {
                @media (min-width: $minWidth) and (max-width: $maxWidth) {
                    @content;
                }
            }
        } @else {
            @if ($minWidth > 0) {
                @media (min-width: $minWidth) {
                    @content;
                }
            } @else {
                @content;
            }
        }
    } @else {
        @warn "Unfortunately, no value could be retrieved from '#{$minWidth}'." + " Please make sure it is defined in `$breakpoints` map."; // stylelint-disable-line max-line-length
    }
}

@mixin each-breakpoint($map, $properties) {
    @each $bp, $value in $map {
        @include media($bp) {
            @each $property in $properties {
                #{$property}: $value;
            }
        }
    }
}

@mixin create-custom-props($props) {
    @each $prop, $value in $props {
        --#{$prop}: #{$value};
    }
}

@mixin transition-colors($color-bg, $color-text) {
    background: $color-bg;
    color: $color-text;
    transition:
        background $transition-time * 2,
        color $transition-time * 2;
}
